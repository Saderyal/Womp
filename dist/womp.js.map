{
  "version": 3,
  "sources": ["../ts/womp.ts"],
  "sourcesContent": ["const DEV_MODE = true;\n\n/* \n================================================\nTYPES\n================================================\n*/\nexport interface WompProps {\n\tchildren?: WompChildren;\n\t[key: string]: any;\n}\n\nexport interface RenderHtml {\n\tparts: TemplateStringsArray;\n\tvalues: any[];\n\t_$wompHtml: true;\n}\n\nexport interface WompComponentOptions {\n\tname?: string;\n\tshadow?: boolean;\n\tcssGeneration?: boolean;\n}\n\nexport interface WompComponent {\n\t(props: WompProps): RenderHtml;\n\tcss: string;\n\t_$womp: true;\n}\n\nexport interface WompElement extends HTMLElement {\n\thooks: Hook[];\n\tprops: WompProps;\n\tinitialProps: WompProps;\n\tmeasurePerf: boolean;\n\trequestRender: () => void;\n\tonDisconnected: () => void;\n\tupdateProps: (prop: string, newValue: any) => void;\n\n\t_$womp: true;\n}\n\nexport interface GlobalStateOptions<S> {\n\tstorage?: string;\n\treducer?: (oldState: S, action: { type: string; [key: string]: any }) => Partial<S>;\n\tasync?: () => Promise<S>;\n}\n\ntype Hook =\n\t| StateHook\n\t| EffectHook\n\t| RefHook\n\t| CallbackHook\n\t| IdHook\n\t| MemoHook\n\t| ReducerHook<any>\n\t| GlobalStateHook<any>;\n\ntype StateHook = [any, (newValue: any) => void];\n\ninterface EffectHook {\n\tdependencies: any;\n\tcallback: VoidFunction | (() => VoidFunction);\n\tcleanupFunction: VoidFunction | void;\n}\n\ninterface RefHook {\n\tcurrent: any;\n\t__wcRef: true;\n}\n\ninterface CallbackHook {\n\t(...args: any[]): any;\n}\n\ntype IdHook = string;\n\ninterface MemoHook {\n\tdependencies: any[];\n\tvalue: any;\n}\n\ninterface ReducerAction {\n\ttype: string;\n\t[key: string]: any;\n}\ntype ReducerHook<State> = [State, (state: any, action: ReducerAction) => void];\n\ninterface GlobalStateHook<S> {\n\tvalue: S;\n\tsubscribers: Set<WompElement>;\n}\n\ninterface WompElementClass {\n\tnew (props: WompProps): HTMLElement;\n\tcachedTemplate: CachedTemplate;\n\tgetOrCreateTemplate(parts: TemplateStringsArray): CachedTemplate;\n}\n\ninterface Dependency {\n\ttype: number;\n\tindex: number;\n\tname?: string;\n\tattrDynamics?: string;\n}\n\ntype Dynamics = DynamicNode | DynamicAttribute | DynamicTag;\n\n/* \n================================================\nVARIABLES\n================================================\n*/\nlet currentRenderingComponent: WompElement = null;\nlet currentHookIndex: number = 0;\n\nconst WC_MARKER = '$wc$';\nconst DYNAMIC_TAG_MARKER = 'wc-wc';\nconst isDynamicTagRegex = /<\\/?$/g;\nconst isAttrRegex = /\\s+([^\\s]*?)=\"?$/g;\nconst selfClosingRegex = /(<([a-x]*?-[a-z]*).*?)\\/>/g;\nconst isInsideTextTag = /<(?<tag>script|style|textarea|title])(?!.*?<\\/\\k<tag>)/gi;\nconst onlyTextChildrenElementsRegex = /^(?:script|style|textarea|title)$/i;\n\nconst NODE = 0;\nconst ATTR = 1;\nconst TAG_NAME = 2;\n\nconst treeWalker = document.createTreeWalker(\n\tdocument,\n\t129 // NodeFilter.SHOW_{ELEMENT|COMMENT}\n);\n\n/* \n================================================\nCLASSES\n================================================\n*/\n\nclass CachedTemplate {\n\tpublic template: HTMLTemplateElement;\n\tpublic dependencies: Dependency[];\n\n\tconstructor(template: HTMLTemplateElement, dependencies: Dependency[]) {\n\t\tthis.template = template;\n\t\tthis.dependencies = dependencies;\n\t}\n\n\tpublic clone(): [DocumentFragment, Dynamics[]] {\n\t\tconst content = this.template.content;\n\t\tconst dependencies = this.dependencies;\n\t\tconst fragment = document.importNode(content, true);\n\t\ttreeWalker.currentNode = fragment;\n\t\tlet node = treeWalker.nextNode();\n\t\tlet nodeIndex = 0;\n\t\tlet dynamicIndex = 0;\n\t\tlet templateDependency = dependencies[0];\n\t\tconst dynamics = [];\n\t\twhile (templateDependency !== undefined) {\n\t\t\tif (nodeIndex === templateDependency.index) {\n\t\t\t\tlet dynamic: Dynamics;\n\t\t\t\tconst type = templateDependency.type;\n\t\t\t\tif (type === NODE) {\n\t\t\t\t\tdynamic = new DynamicNode(node as HTMLElement, node.nextSibling);\n\t\t\t\t} else if (type === ATTR) {\n\t\t\t\t\tdynamic = new DynamicAttribute(node as HTMLElement, templateDependency);\n\t\t\t\t} else if (type === TAG_NAME) {\n\t\t\t\t\tdynamic = new DynamicTag(node as HTMLElement);\n\t\t\t\t}\n\t\t\t\tdynamics.push(dynamic);\n\t\t\t\ttemplateDependency = dependencies[++dynamicIndex];\n\t\t\t}\n\t\t\tif (nodeIndex !== templateDependency?.index) {\n\t\t\t\tnode = treeWalker.nextNode()!;\n\t\t\t\tnodeIndex++;\n\t\t\t}\n\t\t}\n\t\ttreeWalker.currentNode = document;\n\t\treturn [fragment, dynamics];\n\t}\n}\n\nclass HtmlProcessedValue {\n\tpublic stringifiedTemplate: string;\n\tpublic values: any[];\n\tpublic template: [DocumentFragment, Dynamics[]];\n\n\tconstructor(\n\t\tstringifiedTemplate: string,\n\t\tvalues: any[],\n\t\ttemplate: [DocumentFragment, Dynamics[]]\n\t) {\n\t\tthis.stringifiedTemplate = stringifiedTemplate;\n\t\tthis.values = values;\n\t\tthis.template = template;\n\t}\n}\n\nclass DynamicNode {\n\tpublic startNode: ChildNode;\n\tpublic endNode: ChildNode | null;\n\n\tpublic isNode: true = true; // For faster access\n\tpublic isAttr: false = false; // For faster access\n\tpublic isTag: false = false; // For faster access\n\n\tconstructor(startNode: ChildNode, endNode: ChildNode | null) {\n\t\tthis.startNode = startNode;\n\t\tthis.endNode = endNode;\n\t}\n\n\tpublic clearValue() {\n\t\tlet currentNode = this.startNode.nextSibling;\n\t\twhile (currentNode !== this.endNode) {\n\t\t\tcurrentNode.remove();\n\t\t\tcurrentNode = this.startNode.nextSibling;\n\t\t}\n\t}\n\n\tpublic dispose() {\n\t\tthis.clearValue();\n\t\tthis.startNode.remove();\n\t\tthis.endNode.remove();\n\t}\n}\n\nclass DynamicAttribute {\n\tpublic node: HTMLElement;\n\tpublic name: string;\n\tpublic index: number;\n\tpublic attrStructure: string;\n\n\tpublic isNode: false = false; // For faster access\n\tpublic isAttr: true = true; // For faster access\n\tpublic isTag: false = false; // For faster access\n\n\tprivate __callback: (event: Event) => void;\n\tprivate __eventInitialized = false;\n\n\tconstructor(node: HTMLElement, dependency: Dependency) {\n\t\tthis.node = node;\n\t\tthis.name = dependency.name;\n\t\tthis.index = dependency.index;\n\t\tthis.attrStructure = dependency.attrDynamics;\n\t}\n\n\tpublic updateValue(newValue: any) {\n\t\tif (this.name === 'ref' && newValue.__wcRef) {\n\t\t\tnewValue.current = this.node;\n\t\t\tif ((this.node as WompElement)._$womp) {\n\t\t\t\tconst oldDisconnectedCallback = (this.node as WompElement).onDisconnected;\n\t\t\t\t(this.node as WompElement).onDisconnected = () => {\n\t\t\t\t\tnewValue.current = null;\n\t\t\t\t\toldDisconnectedCallback();\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (DEV_MODE && this.name === 'wc-perf') {\n\t\t\t(this.node as WompElement).measurePerf = true;\n\t\t}\n\t\tif ((this.node as WompElement)._$womp) {\n\t\t\t(this.node as WompElement).updateProps(this.name, newValue);\n\t\t}\n\t\tconst isPrimitive = newValue !== Object(newValue);\n\t\tif (newValue === false) this.node.removeAttribute(this.name);\n\t\telse if (isPrimitive) this.node.setAttribute(this.name, newValue);\n\t\telse if (this.name === 'style') {\n\t\t\tlet styleString = '';\n\t\t\tconst styles = Object.keys(newValue);\n\t\t\tfor (const key of styles) {\n\t\t\t\tlet styleValue = newValue[key];\n\t\t\t\tlet styleKey = key.replace(/[A-Z]/g, (letter) => '-' + letter.toLowerCase());\n\t\t\t\tif (typeof styleValue === 'number') styleValue = `${styleValue}px`;\n\t\t\t\tstyleString += `${styleKey}:${styleValue};`;\n\t\t\t}\n\t\t\tthis.node.setAttribute(this.name, styleString);\n\t\t}\n\t}\n\n\tset callback(callback: (event: Event) => void) {\n\t\tif (!this.__eventInitialized) {\n\t\t\tconst eventName = this.name.substring(1);\n\t\t\tthis.node.addEventListener(eventName, this.listener.bind(this));\n\t\t\tthis.__eventInitialized = true;\n\t\t}\n\t\tthis.__callback = callback;\n\t}\n\n\tprivate listener(event: Event) {\n\t\tif (this.__callback) this.__callback(event);\n\t}\n}\n\nclass DynamicTag {\n\tpublic node: ChildNode;\n\n\tpublic isNode: false = false; // For faster access\n\tpublic isAttr: false = false; // For faster access\n\tpublic isTag: true = true; // For faster access\n\n\tconstructor(node: ChildNode) {\n\t\tthis.node = node;\n\t}\n}\n\nclass WompChildren {\n\tpublic nodes: Node[];\n\n\tpublic _$wompChildren: true = true;\n\n\tconstructor(nodes: Node[]) {\n\t\tthis.nodes = nodes;\n\t}\n}\n\nclass WompArrayDependency {\n\tpublic dynamics: DynamicNode[];\n\tpublic isArrayDependency: true = true; // For faster access\n\n\tprivate __oldValues: any[];\n\tprivate __parentDependency: DynamicNode;\n\n\tconstructor(values: any[], dependency: DynamicNode) {\n\t\tthis.dynamics = [];\n\t\tthis.__parentDependency = dependency;\n\t\tthis.addDependenciesFrom(dependency.startNode as HTMLElement, values.length);\n\t\tthis.__oldValues = __setValues(this.dynamics, values, []);\n\t}\n\n\tprivate addDependenciesFrom(startNode: HTMLElement, toAdd: number) {\n\t\tlet currentNode = startNode;\n\t\tlet toAddNumber = toAdd;\n\t\twhile (toAddNumber) {\n\t\t\tconst startComment = document.createComment(`?START`);\n\t\t\tconst endComment = document.createComment(`?END`);\n\t\t\tcurrentNode.after(startComment);\n\t\t\tstartComment.after(endComment);\n\t\t\tconst dependency = new DynamicNode(startComment, endComment);\n\t\t\tcurrentNode = endComment as unknown as HTMLElement;\n\t\t\tthis.dynamics.push(dependency);\n\t\t\ttoAddNumber--;\n\t\t}\n\t}\n\n\tpublic checkUpdates(newValues: any[]) {\n\t\tlet diff = newValues.length - this.__oldValues.length;\n\t\tif (diff > 0) {\n\t\t\tlet startNode = this.dynamics[this.dynamics.length - 1]?.endNode;\n\t\t\tif (!startNode) startNode = this.__parentDependency.startNode;\n\t\t\tthis.addDependenciesFrom(startNode as HTMLElement, diff);\n\t\t} else if (diff < 0) {\n\t\t\twhile (diff) {\n\t\t\t\tconst toClean = this.dynamics.pop();\n\t\t\t\ttoClean.dispose();\n\t\t\t\tdiff++;\n\t\t\t}\n\t\t}\n\t\tthis.__oldValues = __setValues(this.dynamics, newValues, this.__oldValues);\n\t\treturn this;\n\t}\n}\n\n/* \n================================================\nSUPPORT FUNCTIONS\n================================================\n*/\n\n/**\n * Generates the static styles of a component.\n * @returns The generated styles specific to the component\n */\nconst __generateSpecifcStyles = (\n\tcomponent: WompComponent,\n\toptions: WompComponentOptions\n): [string, { [className: string]: string }] => {\n\tconst { css } = component;\n\tconst { shadow, name, cssGeneration } = options;\n\tconst componentName = name;\n\tconst classes: { [key: string]: string } = {};\n\tlet generatedCss = css;\n\tif (DEV_MODE) {\n\t\tif (!shadow && !cssGeneration)\n\t\t\tconsole.warn(\n\t\t\t\t`The component ${name} is not an isolated component (shadow=false) and has the cssGeneration option set to false.\\n` +\n\t\t\t\t\t`This can lead to unexpected behaviors, becasue this component can alter other components' styles.`\n\t\t\t);\n\t}\n\tif (cssGeneration) {\n\t\tconst completeCss = `${shadow ? ':host' : componentName} {display:block;}\\n${css}`;\n\t\tif (DEV_MODE) {\n\t\t\tconst invalidSelectors: string[] = [];\n\t\t\t// It's appropriate that at least one class is present in each selector\n\t\t\t[...completeCss.matchAll(/.*?}([\\s\\S]*?){/gm)].forEach((selector) => {\n\t\t\t\tconst cssSelector = selector[1].trim();\n\t\t\t\tif (!cssSelector.includes('.')) invalidSelectors.push(cssSelector);\n\t\t\t});\n\t\t\tinvalidSelectors.forEach((selector) => {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`The CSS selector \"${selector} {...}\" in the component \"${componentName}\" is not enough specific: include at least one class.\\n`\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\t\tgeneratedCss = completeCss.replace(/\\.(.*?)[\\s|{]/gm, (_, className) => {\n\t\t\tconst uniqueClassName = `${componentName}__${className}`;\n\t\t\tclasses[className] = uniqueClassName;\n\t\t\treturn `.${uniqueClassName} `;\n\t\t});\n\t}\n\treturn [generatedCss, classes];\n};\n\n//* OK\nconst __createHtml = (parts: TemplateStringsArray): [string, string[]] => {\n\tlet html = '';\n\tconst attributes = [];\n\tconst length = parts.length - 1;\n\tlet attrDelimiter = '';\n\tlet textTagName = '';\n\tfor (let i = 0; i < length; i++) {\n\t\tlet part = parts[i];\n\t\t// End of values inside an attribute\n\t\tif (attrDelimiter && part.includes(attrDelimiter)) attrDelimiter = '';\n\t\t// End of values inside a text node (script, textarea, title, style)\n\t\tif (textTagName && new RegExp(`<\\/${textTagName}>`)) textTagName = '';\n\t\tif (attrDelimiter || textTagName) {\n\t\t\t// We are inside an attribute\n\t\t\thtml += part + WC_MARKER;\n\t\t} else {\n\t\t\t// If the Regex is global, it will start from the index past the end of the last match.\n\t\t\tisAttrRegex.lastIndex = 0;\n\t\t\tconst isAttr = isAttrRegex.exec(part);\n\t\t\tif (isAttr) {\n\t\t\t\tconst [match, attrName] = isAttr;\n\t\t\t\tconst beforeLastChar = match[match.length - 1];\n\t\t\t\tattrDelimiter = beforeLastChar === '\"' || beforeLastChar === \"'\" ? beforeLastChar : '';\n\t\t\t\tpart = part.substring(0, part.length - attrDelimiter.length - 1);\n\t\t\t\tlet toAdd = `${part}${WC_MARKER}=`;\n\t\t\t\tif (attrDelimiter) toAdd += `${attrDelimiter}${WC_MARKER}`;\n\t\t\t\telse toAdd += '\"0\"';\n\t\t\t\thtml += toAdd;\n\t\t\t\tattributes.push(attrName);\n\t\t\t} else {\n\t\t\t\tif (part.match(isDynamicTagRegex)) {\n\t\t\t\t\thtml += part + DYNAMIC_TAG_MARKER;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tisInsideTextTag.lastIndex = 0;\n\t\t\t\tconst insideTextTag = isInsideTextTag.exec(part);\n\t\t\t\tif (insideTextTag) {\n\t\t\t\t\ttextTagName = insideTextTag[1];\n\t\t\t\t\thtml += part + WC_MARKER;\n\t\t\t\t} else {\n\t\t\t\t\t// It's a child node\n\t\t\t\t\thtml += part + `<?${WC_MARKER}>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\thtml += parts[parts.length - 1];\n\thtml = html.replace(selfClosingRegex, '$1></$2>');\n\treturn [html, attributes];\n};\n\nconst __createDependencies = (\n\ttemplate: HTMLTemplateElement,\n\tparts: TemplateStringsArray,\n\tattributes: string[]\n) => {\n\tconst dependencies = [];\n\ttreeWalker.currentNode = template.content;\n\tlet node: Element;\n\tlet dependencyIndex = 0;\n\tlet nodeIndex = 0;\n\tconst partsLength = parts.length;\n\twhile (((node as Node) = treeWalker.nextNode()) !== null && dependencies.length < partsLength) {\n\t\t// Is a \"normal\" node\n\t\tif (node.nodeType === 1) {\n\t\t\tif (node.nodeName === DYNAMIC_TAG_MARKER.toUpperCase()) {\n\t\t\t\tconst dependency: Dependency = {\n\t\t\t\t\ttype: TAG_NAME,\n\t\t\t\t\tindex: nodeIndex,\n\t\t\t\t};\n\t\t\t\tdependencies.push(dependency);\n\t\t\t}\n\t\t\tif (node.hasAttributes()) {\n\t\t\t\tconst attributeNames = node.getAttributeNames();\n\t\t\t\tfor (const attrName of attributeNames) {\n\t\t\t\t\tif (attrName.endsWith(WC_MARKER)) {\n\t\t\t\t\t\tconst realName = attributes[dependencyIndex++];\n\t\t\t\t\t\tconst attrValue = node.getAttribute(attrName);\n\t\t\t\t\t\tif (attrValue !== '0') {\n\t\t\t\t\t\t\tconst dynamicParts = attrValue.split(WC_MARKER);\n\t\t\t\t\t\t\tfor (let i = 0; i < dynamicParts.length - 1; i++) {\n\t\t\t\t\t\t\t\tconst dependency: Dependency = {\n\t\t\t\t\t\t\t\t\ttype: ATTR,\n\t\t\t\t\t\t\t\t\tindex: nodeIndex,\n\t\t\t\t\t\t\t\t\tattrDynamics: attrValue,\n\t\t\t\t\t\t\t\t\tname: realName,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tdependencies.push(dependency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst dependency: Dependency = {\n\t\t\t\t\t\t\t\ttype: ATTR,\n\t\t\t\t\t\t\t\tindex: nodeIndex,\n\t\t\t\t\t\t\t\tname: realName,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdependencies.push(dependency);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.removeAttribute(attrName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// A text node should be created for each dynamic part inside of\n\t\t\t// nodes that only have text nodes inside (script, style, textarea, title).\n\t\t\tif (onlyTextChildrenElementsRegex.test(node.tagName)) {\n\t\t\t\tconst strings = node.textContent!.split(WC_MARKER);\n\t\t\t\tconst lastIndex = strings.length - 1;\n\t\t\t\tif (lastIndex > 0) {\n\t\t\t\t\tnode.textContent = '';\n\t\t\t\t\tfor (let i = 0; i < lastIndex; i++) {\n\t\t\t\t\t\tnode.append(strings[i], document.createComment(''));\n\t\t\t\t\t\t// Walk past the marker node we just added\n\t\t\t\t\t\ttreeWalker.nextNode();\n\t\t\t\t\t\tdependencies.push({ type: NODE, index: ++nodeIndex });\n\t\t\t\t\t}\n\t\t\t\t\t// It's not necessary to adjust nodeIndex here\n\t\t\t\t\tnode.append(strings[lastIndex], document.createComment(''));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (node.nodeType === 8) {\n\t\t\t// Is a comment\n\t\t\tconst data = (node as unknown as Comment).data;\n\t\t\tif (data === `?${WC_MARKER}`) dependencies.push({ type: NODE, index: nodeIndex });\n\t\t}\n\t\tnodeIndex++;\n\t}\n\treturn dependencies;\n};\n\nconst __getRenderHtmlString = (render: RenderHtml) => {\n\tlet value = '';\n\tconst { parts, values } = render;\n\tfor (let i = 0; i < parts.length; i++) {\n\t\tvalue += parts[i];\n\t\tif (values[i]?.componentName) value += values[i].componentName;\n\t}\n\treturn value;\n};\n\nconst __shouldUpdate = (currentValue: any, oldValue: any, dependency: Dynamics) => {\n\tconst valuesDiffers = currentValue !== oldValue;\n\tconst isComposedAttribute = !!(dependency as DynamicAttribute).attrStructure;\n\tconst isWompChildren = currentValue?._$wompChildren;\n\tconst childrenNeedUpdate =\n\t\tisWompChildren && (dependency as DynamicNode).startNode.nextSibling !== currentValue.nodes[0];\n\treturn valuesDiffers || isComposedAttribute || childrenNeedUpdate;\n};\n\n// This function alters the original [dynamics] array: it's not pure.\nconst __setValues = (dynamics: Dynamics[], values: any[], oldValues: any[]) => {\n\tconst newValues = [...values];\n\tfor (let i = 0; i < dynamics.length; i++) {\n\t\tconst currentDependency = dynamics[i];\n\t\tconst currentValue = newValues[i];\n\t\tconst oldValue = oldValues[i];\n\t\tif (!__shouldUpdate(currentValue, oldValue, currentDependency))\n\t\t\t// Skip update: values are the same\n\t\t\tcontinue;\n\t\tif (currentDependency.isNode) {\n\t\t\t// Falsy values are cleared from the DOM\n\t\t\tif (currentValue === false) {\n\t\t\t\tcurrentDependency.clearValue();\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (currentValue?._$wompHtml) {\n\t\t\t\t// handle template elements\n\t\t\t\tconst oldStringified = oldValue?.stringifiedTemplate;\n\t\t\t\tconst newTemplate = __getRenderHtmlString(currentValue);\n\t\t\t\tconst sameString = newTemplate === oldStringified;\n\t\t\t\tif (oldValue === undefined || !sameString) {\n\t\t\t\t\tconst cachedTemplate = __createTemplate(currentValue.parts);\n\t\t\t\t\tconst template = cachedTemplate.clone();\n\t\t\t\t\tconst [fragment, dynamics] = template;\n\t\t\t\t\tnewValues[i] = new HtmlProcessedValue(newTemplate, currentValue.values, template);\n\t\t\t\t\t__setValues(dynamics, currentValue.values, oldValue?.values ?? oldValue ?? []);\n\t\t\t\t\tconst endNode = (currentDependency as DynamicNode).endNode;\n\t\t\t\t\tconst startNode = (currentDependency as DynamicNode).startNode;\n\t\t\t\t\tlet currentNode = startNode.nextSibling;\n\t\t\t\t\twhile (currentNode !== endNode) {\n\t\t\t\t\t\tcurrentNode.remove();\n\t\t\t\t\t\tcurrentNode = startNode.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentNode = startNode;\n\t\t\t\t\twhile (fragment.childNodes.length) {\n\t\t\t\t\t\tcurrentNode.after(fragment.childNodes[0]);\n\t\t\t\t\t\tcurrentNode = currentNode.nextSibling;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst [_, dynamics] = (oldValue as HtmlProcessedValue).template;\n\t\t\t\t\tconst processedValues = __setValues(\n\t\t\t\t\t\tdynamics,\n\t\t\t\t\t\tcurrentValue.values,\n\t\t\t\t\t\t(oldValue as HtmlProcessedValue).values\n\t\t\t\t\t);\n\t\t\t\t\t(oldValue as HtmlProcessedValue).values = processedValues;\n\t\t\t\t\tnewValues[i] = oldValue;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// It's not necessary to check every single node: if a dependency updates,\n\t\t\t// it'll be automatically updated. It's only necessary to update the\n\t\t\t// textContent of primitive values.\n\t\t\tconst isPrimitive = currentValue !== Object(currentValue);\n\t\t\tconst oldIsPrimitive = oldValue !== Object(oldValue) && oldValue !== undefined;\n\t\t\tconst startNode = currentDependency.startNode;\n\t\t\tif (isPrimitive) {\n\t\t\t\tif (oldIsPrimitive) {\n\t\t\t\t\t// At this point there's already a content in the node\n\t\t\t\t\tif (startNode.nextSibling) startNode.nextSibling.textContent = currentValue;\n\t\t\t\t\telse startNode.after(currentValue);\n\t\t\t\t} else {\n\t\t\t\t\tcurrentDependency.clearValue();\n\t\t\t\t\tstartNode.after(currentValue);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet currentNode = startNode.nextSibling;\n\t\t\t\tlet newNodeIndex = 0;\n\t\t\t\tlet index = 0;\n\t\t\t\tif (currentValue._$wompChildren) {\n\t\t\t\t\tconst childrenNodes = (currentValue as WompChildren).nodes;\n\t\t\t\t\twhile (index < childrenNodes.length) {\n\t\t\t\t\t\tif (!currentNode || index === 0) currentNode = startNode;\n\t\t\t\t\t\tconst newNode = childrenNodes[newNodeIndex];\n\t\t\t\t\t\tnewNodeIndex++;\n\t\t\t\t\t\tcurrentNode.after(newNode);\n\t\t\t\t\t\tcurrentNode = currentNode.nextSibling;\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (Array.isArray(currentValue)) {\n\t\t\t\t\t\tif (!(oldValue as WompArrayDependency)?.isArrayDependency) {\n\t\t\t\t\t\t\tcurrentDependency.clearValue();\n\t\t\t\t\t\t\tnewValues[i] = new WompArrayDependency(currentValue, currentDependency);\n\t\t\t\t\t\t} else newValues[i] = (oldValue as WompArrayDependency).checkUpdates(currentValue);\n\t\t\t\t\t} else if (DEV_MODE) {\n\t\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t\t'Rendering objects is not supported. Doing a stringified version of it can rise errors.\\n' +\n\t\t\t\t\t\t\t\t'This node will be ignored.'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (currentDependency.isAttr) {\n\t\t\tconst attrName = currentDependency.name;\n\t\t\tif (attrName.startsWith('@')) {\n\t\t\t\tcurrentDependency.callback = currentValue;\n\t\t\t} else {\n\t\t\t\tconst attrStructure = currentDependency.attrStructure;\n\t\t\t\tif (attrStructure) {\n\t\t\t\t\tconst parts = attrStructure.split(WC_MARKER);\n\t\t\t\t\tlet dynamicValue = currentValue;\n\t\t\t\t\tfor (let j = 0; j < parts.length - 1; j++) {\n\t\t\t\t\t\tparts[j] = `${parts[j]}${dynamicValue}`;\n\t\t\t\t\t\ti++; // Go to the next dynamic value\n\t\t\t\t\t\tdynamicValue = newValues[i];\n\t\t\t\t\t}\n\t\t\t\t\ti--; // Since it'll be already increased in the loop, decrease by one\n\t\t\t\t\tcurrentDependency.updateValue(parts.join('').trim());\n\t\t\t\t} else {\n\t\t\t\t\tcurrentDependency.updateValue(currentValue);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (currentDependency.isTag) {\n\t\t\tconst node = currentDependency.node;\n\t\t\tlet customElement: HTMLElement = null;\n\t\t\tconst isCustomComponent = currentValue._$womp;\n\t\t\tconst newNodeName: string = isCustomComponent ? currentValue.componentName : currentValue;\n\t\t\tif (node.nodeName !== newNodeName.toUpperCase()) {\n\t\t\t\tconst oldAttributes = (node as HTMLElement).getAttributeNames();\n\t\t\t\tif (isCustomComponent) {\n\t\t\t\t\t// Is a Womp Element\n\t\t\t\t\tif (DEV_MODE) {\n\t\t\t\t\t\tif ((node as WompElement)._$womp) {\n\t\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t\t'Dynamic tags are currently not supported, unsless used to render for the first time a custom component.\\n' +\n\t\t\t\t\t\t\t\t\t'Instead, you can use conditional rendering (e.g. condition ? html`<${First} />` : html`<${Second} />`).'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst initialProps: WompProps = {};\n\t\t\t\t\tfor (const attrName of oldAttributes) {\n\t\t\t\t\t\t// attributes on the dom will be set when creating the element\n\t\t\t\t\t\tconst attrValue = (node as HTMLElement).getAttribute(attrName);\n\t\t\t\t\t\tinitialProps[attrName] = attrValue === '' ? true : attrValue;\n\t\t\t\t\t}\n\t\t\t\t\tcustomElement = new currentValue() as WompElement;\n\t\t\t\t\t(customElement as WompElement).initialProps = initialProps;\n\t\t\t\t\tconst childNodes = node.childNodes;\n\t\t\t\t\twhile (childNodes.length) {\n\t\t\t\t\t\tcustomElement.appendChild(childNodes[0]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Is normal element\n\t\t\t\t\tcustomElement = document.createElement(newNodeName);\n\t\t\t\t\tfor (const attrName of oldAttributes) {\n\t\t\t\t\t\tcustomElement.setAttribute(attrName, (node as HTMLElement).getAttribute(attrName));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlet index = i;\n\t\t\t\tlet currentDynamic = dynamics[index] as DynamicAttribute;\n\t\t\t\twhile (currentDynamic?.node === node) {\n\t\t\t\t\t// Update node pointer of dynamics pointing to the old one.\n\t\t\t\t\tcurrentDynamic.node = customElement;\n\t\t\t\t\tcurrentDynamic = dynamics[++index] as DynamicAttribute;\n\t\t\t\t\t// Set initial props of the correct type, so a number doesn't become a string\n\t\t\t\t\tif (currentDynamic?.name && currentDynamic?.name !== 'ref')\n\t\t\t\t\t\t(customElement as WompElement).initialProps[currentDynamic.name] = values[index];\n\t\t\t\t}\n\t\t\t\tnode.replaceWith(customElement);\n\t\t\t}\n\t\t}\n\t}\n\treturn newValues;\n};\n\nconst __createTemplate = (parts: TemplateStringsArray) => {\n\tconst [dom, attributes] = __createHtml(parts);\n\tconst template = document.createElement('template');\n\ttemplate.innerHTML = dom;\n\tconst dependencies = __createDependencies(template, parts, attributes);\n\treturn new CachedTemplate(template, dependencies);\n};\n\n/* \n================================================\nWOMP COMPONENT DEFINITION\n================================================\n*/\nconst _$womp = (Component: WompComponent, options: WompComponentOptions): WompElementClass => {\n\tconst [generatedCSS, styles] = __generateSpecifcStyles(Component, options);\n\tconst style = document.createElement('style');\n\tconst styleClassName = `${options.name}__styles`;\n\tstyle.classList.add(styleClassName);\n\tstyle.textContent = generatedCSS;\n\tif (!options.shadow) {\n\t\tdocument.body.appendChild(style);\n\t}\n\tconst WompComponent = class extends HTMLElement implements WompElement {\n\t\tstatic componentName = options.name;\n\t\tstatic _$womp = true;\n\n\t\tpublic hooks: Hook[] = [];\n\t\tpublic props: WompProps = {};\n\t\tpublic measurePerf: boolean = false;\n\t\tpublic _$womp: true = true;\n\t\tpublic initialProps: WompProps = {};\n\n\t\tprivate __ROOT: this | ShadowRoot;\n\t\tprivate __dynamics: Dynamics[];\n\t\tprivate __updating: boolean = false;\n\t\tprivate __oldValues: any[] = [];\n\t\tprivate __isInitializing: boolean = true;\n\t\tprivate __connected: boolean = false;\n\t\tprivate __isInDOM: boolean = false;\n\n\t\tstatic cachedTemplate: CachedTemplate;\n\n\t\tstatic getOrCreateTemplate(parts: TemplateStringsArray) {\n\t\t\tif (!this.cachedTemplate) this.cachedTemplate = __createTemplate(parts);\n\t\t\treturn this.cachedTemplate;\n\t\t}\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\t/** @override component is connected to DOM */\n\t\tconnectedCallback() {\n\t\t\tthis.__isInDOM = true;\n\t\t\tif (!this.__connected) this.initElement();\n\t\t}\n\n\t\t/** @override component is connected to DOM */\n\t\tdisconnectedCallback() {\n\t\t\t// When a component is just \"moved\" to another element but not\n\t\t\t// removed from the DOM, it still calls the disconnected and\n\t\t\t// then the connected callback again. This prevents it.\n\t\t\tif (this.__connected) {\n\t\t\t\tthis.__isInDOM = false;\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\t// If the connectedCallback is called again, isInTheDOM will be true\n\t\t\t\t\tif (!this.__isInDOM) {\n\t\t\t\t\t\tthis.onDisconnected();\n\t\t\t\t\t\tif (DEV_MODE) console.warn('Disconnected', this);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpublic onDisconnected() {}\n\n\t\t/**\n\t\t * Initializes the component with the state, props, and styles.\n\t\t */\n\t\tprivate initElement() {\n\t\t\tthis.__ROOT = this; // Shadow DOM is eventually attached later\n\t\t\tthis.props = {\n\t\t\t\t...this.initialProps,\n\t\t\t\tstyles: styles,\n\t\t\t};\n\t\t\tconst componentAttributes = this.getAttributeNames();\n\t\t\tfor (const attrName of componentAttributes) {\n\t\t\t\tif (!this.props.hasOwnProperty(attrName)) {\n\t\t\t\t\tconst attrValue = this.getAttribute(attrName);\n\t\t\t\t\tthis.props[attrName] = attrValue === '' ? true : attrValue;\n\t\t\t\t}\n\t\t\t\tif (DEV_MODE && attrName === 'wc-perf') {\n\t\t\t\t\tthis.measurePerf = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (DEV_MODE && this.props['wc-perf']) {\n\t\t\t\tthis.measurePerf = true;\n\t\t\t}\n\n\t\t\tif (DEV_MODE && this.measurePerf) console.time('First render ' + options.name);\n\t\t\t// The children are saved in a WompChildren instance, so that\n\t\t\t// they are not lost even when disconnected from the DOM.\n\t\t\tconst childNodes = this.__ROOT.childNodes;\n\t\t\tconst childrenArray: Node[] = [];\n\t\t\t// Using a template to temporarily put children, so that\n\t\t\t// they are removed from the DOM and put on it where needed.\n\t\t\tconst supportTemplate = document.createElement('template');\n\t\t\twhile (childNodes.length) {\n\t\t\t\tchildrenArray.push(childNodes[0]);\n\t\t\t\tsupportTemplate.appendChild(childNodes[0]);\n\t\t\t}\n\t\t\tconst children = new WompChildren(childrenArray);\n\t\t\tthis.props.children = children;\n\n\t\t\t// Create shadow DOM\n\t\t\tif (options.shadow) this.__ROOT = this.attachShadow({ mode: 'open' });\n\n\t\t\t// Attach styles only if we are inside a shadow root and the same style is\n\t\t\t// not already present.\n\t\t\tconst root = this.getRootNode();\n\t\t\tif (\n\t\t\t\t(options.shadow || root !== document) &&\n\t\t\t\t!(root as ShadowRoot).querySelector(`.${styleClassName}`)\n\t\t\t) {\n\t\t\t\tconst clonedStyles = style.cloneNode(true);\n\t\t\t\tthis.__ROOT.appendChild(clonedStyles);\n\t\t\t}\n\n\t\t\tconst renderHtml = this.callComponent();\n\t\t\tconst { values, parts } = renderHtml;\n\t\t\tconst template = (this.constructor as typeof WompComponent).getOrCreateTemplate(parts);\n\t\t\tconst [fragment, dynamics] = template.clone();\n\t\t\tthis.__dynamics = dynamics;\n\t\t\tconst elaboratedValues = __setValues(this.__dynamics, values, this.__oldValues);\n\t\t\tthis.__oldValues = elaboratedValues;\n\n\t\t\twhile (fragment.childNodes.length) {\n\t\t\t\tthis.__ROOT.appendChild(fragment.childNodes[0]);\n\t\t\t}\n\t\t\tthis.__isInitializing = false;\n\t\t\tthis.__connected = true;\n\t\t\tif (DEV_MODE && this.measurePerf) console.timeEnd('First render ' + options.name);\n\t\t}\n\n\t\tprivate callComponent() {\n\t\t\tcurrentRenderingComponent = this;\n\t\t\tcurrentHookIndex = 0;\n\t\t\tconst result = Component.call(this, this.props);\n\t\t\tlet renderHtml: RenderHtml = result as RenderHtml;\n\t\t\tif (typeof result === 'string' || result instanceof HTMLElement) renderHtml = html`${result}`;\n\t\t\treturn renderHtml;\n\t\t}\n\n\t\tpublic requestRender() {\n\t\t\tif (!this.__updating) {\n\t\t\t\tthis.__updating = true;\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (DEV_MODE && this.measurePerf) console.time('Re-render ' + options.name);\n\t\t\t\t\tconst renderHtml = this.callComponent();\n\t\t\t\t\tconst oldValues = __setValues(this.__dynamics, renderHtml.values, this.__oldValues);\n\t\t\t\t\tthis.__oldValues = oldValues;\n\t\t\t\t\tthis.__updating = false;\n\t\t\t\t\tif (DEV_MODE && this.measurePerf) console.timeEnd('Re-render ' + options.name);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpublic updateProps(prop: string, value: any) {\n\t\t\tif (this.props[prop] !== value) {\n\t\t\t\tthis.props[prop] = value;\n\t\t\t\tif (!this.__isInitializing) {\n\t\t\t\t\tconsole.warn(`Updating ${prop}`, this.__isInitializing);\n\t\t\t\t\tthis.requestRender();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn WompComponent;\n};\n\n/* \n================================================\nHOOKS\n================================================\n*/\n\nexport const useHook = (): [WompElement, number] => {\n\tconst currentComponent = currentRenderingComponent;\n\tconst currentIndex = currentHookIndex;\n\tconst res: [WompElement, number] = [currentComponent, currentIndex];\n\tcurrentHookIndex++;\n\treturn res;\n};\n\nexport const useState = <State>(defaultValue: State) => {\n\tconst [component, hookIndex] = useHook();\n\tif (!component.hooks.hasOwnProperty(hookIndex)) {\n\t\tconst index = hookIndex;\n\t\tcomponent.hooks[index] = [\n\t\t\tdefaultValue,\n\t\t\t(newValue: State) => {\n\t\t\t\tlet computedValue = newValue;\n\t\t\t\tconst stateHook = component.hooks[index] as StateHook;\n\t\t\t\tif (typeof newValue === 'function') {\n\t\t\t\t\tcomputedValue = newValue(stateHook[0]);\n\t\t\t\t}\n\t\t\t\tif (computedValue !== stateHook[0]) {\n\t\t\t\t\tstateHook[0] = computedValue;\n\t\t\t\t\tcomponent.requestRender();\n\t\t\t\t}\n\t\t\t},\n\t\t];\n\t}\n\tconst state = component.hooks[hookIndex];\n\treturn state;\n};\n\nexport const useEffect = (callback: VoidFunction | (() => VoidFunction), dependencies: any[]) => {\n\tconst [component, hookIndex] = useHook();\n\tif (!component.hooks.hasOwnProperty(hookIndex)) {\n\t\tconst effectHook = {\n\t\t\tdependencies: dependencies,\n\t\t\tcallback: callback,\n\t\t\tcleanupFunction: null,\n\t\t} as EffectHook;\n\t\tcomponent.hooks[hookIndex] = effectHook;\n\t\tPromise.resolve().then(() => {\n\t\t\teffectHook.cleanupFunction = callback();\n\t\t});\n\t} else {\n\t\tconst componentEffect = component.hooks[hookIndex] as EffectHook;\n\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\tconst oldDep = componentEffect.dependencies[i];\n\t\t\tif (oldDep !== dependencies[i]) {\n\t\t\t\tif (typeof componentEffect.cleanupFunction === 'function')\n\t\t\t\t\tcomponentEffect.cleanupFunction();\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tcomponentEffect.cleanupFunction = callback();\n\t\t\t\t\tcomponentEffect.dependencies = dependencies;\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const useLayoutEffect = (\n\tcallback: VoidFunction | (() => VoidFunction),\n\tdependencies: any[]\n) => {\n\tconst [component, hookIndex] = useHook();\n\tif (!component.hooks.hasOwnProperty(hookIndex)) {\n\t\tconst effectHook = {\n\t\t\tdependencies: dependencies,\n\t\t\tcallback: callback,\n\t\t\tcleanupFunction: null,\n\t\t} as EffectHook;\n\t\tcomponent.hooks[hookIndex] = effectHook;\n\t\teffectHook.cleanupFunction = callback();\n\t} else {\n\t\tconst componentEffect = component.hooks[hookIndex] as EffectHook;\n\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\tconst oldDep = componentEffect.dependencies[i];\n\t\t\tif (oldDep !== dependencies[i]) {\n\t\t\t\tif (typeof componentEffect.cleanupFunction === 'function')\n\t\t\t\t\tcomponentEffect.cleanupFunction();\n\t\t\t\tcomponentEffect.cleanupFunction = callback();\n\t\t\t\tcomponentEffect.dependencies = dependencies;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n};\n\nexport const useRef = <T>(initialValue: T | null = null) => {\n\tconst [component, hookIndex] = useHook();\n\tif (!component.hooks.hasOwnProperty(hookIndex)) {\n\t\tcomponent.hooks[hookIndex] = {\n\t\t\tcurrent: initialValue,\n\t\t\t__wcRef: true,\n\t\t} as RefHook;\n\t}\n\tconst ref = component.hooks[hookIndex];\n\treturn ref;\n};\n\n// State update must use callbacks\nexport const useCallback = (callbackFn: CallbackHook) => {\n\tconst [component, hookIndex] = useHook();\n\tif (!component.hooks.hasOwnProperty(hookIndex)) {\n\t\tcomponent.hooks[hookIndex] = callbackFn;\n\t}\n\tconst callback = component.hooks[hookIndex];\n\treturn callback as CallbackHook;\n};\n\nconst useIdMemo = () => {\n\tlet counter = 0;\n\treturn () => {\n\t\tconst [component, hookIndex] = useHook();\n\t\tif (!component.hooks.hasOwnProperty(hookIndex)) {\n\t\t\tcomponent.hooks[hookIndex] = `:r${counter}:` as IdHook;\n\t\t\tcounter++;\n\t\t}\n\t\tconst callback = component.hooks[hookIndex];\n\t\treturn callback as IdHook;\n\t};\n};\nexport const useId = useIdMemo();\n\nexport const useMemo = (callbackFn: () => any, dependencies: any[]) => {\n\tconst [component, hookIndex] = useHook();\n\tif (!component.hooks.hasOwnProperty(hookIndex)) {\n\t\tcomponent.hooks[hookIndex] = {\n\t\t\tvalue: callbackFn(),\n\t\t\tdependencies: dependencies,\n\t\t} as MemoHook;\n\t} else {\n\t\tconst oldMemo = component.hooks[hookIndex] as MemoHook;\n\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\tconst oldDep = oldMemo.dependencies[i];\n\t\t\tif (oldDep !== dependencies[i]) {\n\t\t\t\toldMemo.dependencies = dependencies;\n\t\t\t\toldMemo.value = callbackFn();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tconst memoizedResult = component.hooks[hookIndex] as MemoHook;\n\treturn memoizedResult.value;\n};\n\nexport const useReducer = <State>(\n\treducer: (state: State, action: ReducerAction) => Partial<State>,\n\tinitialState: State\n) => {\n\tconst [component, hookIndex] = useHook();\n\tconst index = hookIndex;\n\tif (!component.hooks.hasOwnProperty(index)) {\n\t\tconst dispatch = (action: ReducerAction) => {\n\t\t\tconst currentState = (component.hooks[index] as ReducerHook<State>)[0];\n\t\t\tconst partialState = reducer(currentState, action);\n\t\t\tconst keys = Object.keys(partialState);\n\t\t\tfor (const key of keys) {\n\t\t\t\tif ((partialState as any)[key] !== (currentState as any)[key]) {\n\t\t\t\t\tcomponent.requestRender();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst newState = {\n\t\t\t\t...currentState,\n\t\t\t\t...partialState,\n\t\t\t} as State;\n\t\t\t(component.hooks[hookIndex] as ReducerHook<State>)[0] = newState;\n\t\t};\n\t\tconst reducerHook: ReducerHook<State> = [initialState, dispatch];\n\t\tcomponent.hooks[hookIndex] = reducerHook;\n\t}\n\tconst stateAndReducer = component.hooks[hookIndex];\n\treturn stateAndReducer;\n};\n\nexport const useExposed = (toExpose: { [key: string]: any }) => {\n\tconst component = currentRenderingComponent;\n\tconst keys = Object.keys(toExpose);\n\tfor (const key of keys) {\n\t\t(component as any)[key] = toExpose[key];\n\t}\n};\n\n/* \n================================================\nGLOBAL STORE MANAGEMENT\n================================================\n*/\n\nexport const useGlobalState = <S>(defaultValue: S, options: GlobalStateOptions<S> = {}) => {\n\tconst allOptions: GlobalStateOptions<S> = {\n\t\tstorage: null,\n\t\treducer: null,\n\t\t...options,\n\t};\n\tlet initialValue = defaultValue;\n\tif (allOptions.storage) {\n\t\tinitialValue = JSON.parse(localStorage.getItem(allOptions.storage)) as S;\n\t\tif (initialValue === null) initialValue = defaultValue;\n\t}\n\tif (allOptions.async) {\n\t\tinitialValue = {\n\t\t\tstate: 'loading',\n\t\t\tdata: initialValue,\n\t\t\terror: null,\n\t\t} as any;\n\t}\n\tconst subscribers = new Set<WompElement>();\n\tlet setter: any;\n\tif (allOptions.reducer) {\n\t\tsetter = (action: { type: string; [key: string]: any }) => {\n\t\t\tconst oldState = allOptions.async ? (globalState.value as any).data : globalState.value;\n\t\t\tconst partialState = allOptions.reducer(oldState, action);\n\t\t\tif (\n\t\t\t\ttypeof partialState === 'object' &&\n\t\t\t\t!Array.isArray(partialState) &&\n\t\t\t\tpartialState !== null\n\t\t\t) {\n\t\t\t\tglobalState.value = {\n\t\t\t\t\t...globalState.value,\n\t\t\t\t\t...partialState,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tglobalState.value = partialState as S;\n\t\t\t}\n\t\t\tif (allOptions.storage) {\n\t\t\t\tlocalStorage.setItem(allOptions.storage, JSON.stringify(globalState.value));\n\t\t\t}\n\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\tsubscriber.requestRender();\n\t\t\t}\n\t\t};\n\t} else {\n\t\tsetter = (newStateVal: S | ((oldState: S) => S)) => {\n\t\t\tlet newState = newStateVal as S;\n\t\t\tconst oldState = allOptions.async ? (globalState.value as any).data : globalState.value;\n\t\t\tif (typeof newStateVal === 'function')\n\t\t\t\tnewState = (newStateVal as (oldState: S) => S)(structuredClone<S>(oldState));\n\t\t\tif (DEV_MODE) {\n\t\t\t\tconst errString =\n\t\t\t\t\t'The type of the new value is different from the previous type. Alway keep the same value type.';\n\t\t\t\tif (Array.isArray(oldState) && !Array.isArray(newState)) console.error(errString);\n\t\t\t\telse if (typeof oldState === 'object' && typeof newState !== 'object')\n\t\t\t\t\tconsole.error(errString);\n\t\t\t\telse if (typeof oldState !== 'object' && typeof newState === 'object')\n\t\t\t\t\tconsole.error(errString);\n\t\t\t}\n\t\t\tif (oldState !== newState) {\n\t\t\t\tif (allOptions.async) {\n\t\t\t\t\t(globalState.value as any).data = newState;\n\t\t\t\t} else {\n\t\t\t\t\tglobalState.value = newState;\n\t\t\t\t}\n\t\t\t\tif (allOptions.storage) {\n\t\t\t\t\tlocalStorage.setItem(allOptions.storage, JSON.stringify(globalState.value));\n\t\t\t\t}\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber.requestRender();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\tif (allOptions.async) {\n\t\tallOptions\n\t\t\t.async()\n\t\t\t.then((data) => {\n\t\t\t\tglobalState.value = {\n\t\t\t\t\tstate: 'hasData',\n\t\t\t\t\tdata: data,\n\t\t\t\t\terror: null,\n\t\t\t\t} as any;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber.requestRender();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tglobalState.value = {\n\t\t\t\t\tstate: 'hasError',\n\t\t\t\t\tdata: null,\n\t\t\t\t\terror: err,\n\t\t\t\t} as any;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber.requestRender();\n\t\t\t\t}\n\t\t\t});\n\t}\n\tconst globalState = {\n\t\tvalue: initialValue,\n\t\tsubscribers: subscribers,\n\t\tsetter: setter,\n\t} as GlobalStateHook<S>;\n\treturn (\n\t\tisOnlySetter = false\n\t): [S, (oldState: S, action?: { type: string; [key: string]: any }) => S] => {\n\t\tconst [component, hookIndex] = useHook();\n\t\tif (!component.hooks.hasOwnProperty(hookIndex)) {\n\t\t\tconst oldDisconnectedCallback = component.onDisconnected;\n\t\t\tcomponent.onDisconnected = () => {\n\t\t\t\tsubscribers.delete(component);\n\t\t\t\toldDisconnectedCallback();\n\t\t\t};\n\t\t\tif (!isOnlySetter) subscribers.add(component);\n\t\t\tcomponent.hooks[hookIndex] = globalState;\n\t\t}\n\t\treturn [globalState.value, setter];\n\t};\n};\n\n/* \n================================================\nHTML\n================================================\n*/\n\n/**\n * Elaborate the string representation of the rendering content of the component.\n *\n * This function must be called without the use of the parentheses, like in the following example:\n *\n * @example\n * ```javascript\n * render(){\n *   return html`<div>Hello World!</div>`;\n * }\n * ```\n * @param template The list of string to concatenate with the values\n * @param values The list of values to concatenate with the templates\n */\nexport function html(templateParts: TemplateStringsArray, ...values: any[]): RenderHtml {\n\tconst cleanValues = [];\n\tconst length = templateParts.length - 1; // skip last element\n\tfor (let i = 0; i < length; i++) {\n\t\t// Don't include dynamic closing tags\n\t\tif (!templateParts[i].endsWith('</')) cleanValues.push(values[i]);\n\t}\n\treturn {\n\t\tparts: templateParts,\n\t\tvalues: cleanValues,\n\t\t_$wompHtml: true,\n\t};\n}\n\n/* \n================================================\nDEFAULT OPTIONS\n================================================\n*/\nexport const wompDefaultOptions: WompComponentOptions = {\n\tshadow: false,\n\tname: '',\n\tcssGeneration: true,\n};\n\n/* \n================================================\nDEFINE WOMP COMPONENT\n================================================\n*/\nexport function defineWomp(component: WompComponent, options: WompComponentOptions = {}) {\n\tif (!component.css) component.css = '';\n\tconst componentOptions = {\n\t\t...wompDefaultOptions,\n\t\t...options,\n\t};\n\tif (!componentOptions.name) {\n\t\tlet newName = component.name\n\t\t\t.replace(/.[A-Z]/g, (letter) => `${letter[0]}-${letter[1].toLowerCase()}`)\n\t\t\t.toLowerCase();\n\t\tif (!newName.includes('-')) newName += '-womp';\n\t\tcomponentOptions.name = newName;\n\t}\n\tconst Component = _$womp(component, componentOptions);\n\tcustomElements.define(componentOptions.name, Component);\n\treturn Component;\n}\n\n//! Aggiungi commenti alle funzioni/classi\n//! Crea file .d.ts\n//! Crea documentazione\n\n//? NO useDebugValue (because is for react-dev-tools)\n//? NO useContext (because there is no context)\n//? NO useDeferredValue\n//? NO useImperativeHandle\n//? NO useInsertionEffect\n//? NO useOptimistic\n"],
  "mappings": "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",
  "names": ["html", "dynamics", "startNode"]
}
