{
  "version": 3,
  "sources": ["../ts/womp.ts"],
  "sourcesContent": ["export interface WompProps {\n\tchildren?: WompChildren;\n\t[key: string]: any;\n}\n\ninterface WompChildren {\n\t__wompChildren: true;\n\tstatic: boolean;\n\tnodes: NodeList;\n}\n\nexport interface RenderHtml {\n\tparts: TemplateStringsArray;\n\tvalues: any[];\n\t__womp: true;\n}\n\nexport interface WompComponent {\n\t(props: WompProps): RenderHtml;\n\tcomponentName: string;\n\tcss: string;\n\t__womp: true;\n}\n\ntype State = [any, (newValue: any) => void];\n\nexport interface WompElement extends HTMLElement {\n\tstate: State[];\n\teffects: Effect[];\n\tprops: { [key: string]: any };\n\tstaticChildren: HTMLTemplateElement;\n\trequestRender: () => void;\n\tupdateProps: (prop: string, newValue: any) => void;\n\n\t__womp: true;\n}\n\ninterface Effect {\n\tdependencies: any;\n\tcallback: VoidFunction | (() => VoidFunction);\n\tcleanupFunction: VoidFunction | void;\n}\n\ninterface WompElementClass {\n\tnew (props: WompProps): HTMLElement;\n\tcachedTemplate: CachedTemplate;\n\tgetOrCreateTemplate(parts: TemplateStringsArray): CachedTemplate;\n}\n\ninterface Dependency {\n\ttype: number;\n\tindex: number;\n\tname?: string;\n\tattrDynamics?: string;\n}\n\ntype Dynamics = DynamicNode | DynamicAttribute | DynamicTag;\n\n/* \n================================================\nSTART WOMP\n================================================\n*/\n\nconst DEV_MODE = true;\n\nlet currentRenderingComponent: WompElement = null;\nlet currentHookIndex: number = 0;\nlet currentEffectIndex: number = 0;\nconst WC_MARKER = '$wc$';\nconst DYNAMIC_TAG_MARKER = 'wc-wc';\nconst isDynamicTagRegex = /<\\/?$/g;\nconst isAttrRegex = /\\s+([^\\s]*?)=\"?$/g;\nconst selfClosingRegex = /(<([a-x]*?-[a-z]*).*?)\\/>/g;\nconst isInsideTextTag = /<(?<tag>script|style|textarea|title])(?!.*?<\\/\\k<tag>)/gi;\nconst onlyTextChildrenElementsRegex = /^(?:script|style|textarea|title)$/i;\n\nconst NODE = 0;\nconst ATTR = 1;\nconst TAG_NAME = 2;\n\nconst treeWalker = document.createTreeWalker(\n\tdocument,\n\t129 // NodeFilter.SHOW_{ELEMENT|COMMENT}\n);\n\n/**\n * Generates the static styles of a component.\n * @returns The generated styles specific to the component\n */\nconst generateSpecifcStyles = (\n\tcomponent: WompComponent\n): [string, { [className: string]: string }] => {\n\tconst { css, componentName } = component;\n\tif (DEV_MODE) {\n\t\tconst invalidSelectors: string[] = [];\n\t\t// It's appropriate that at least one class is present in each selector\n\t\t[...css.matchAll(/.*?}([\\s\\S]*?){/gm)].forEach((selector) => {\n\t\t\tconst cssSelector = selector[1].trim();\n\t\t\tif (!cssSelector.includes('.')) invalidSelectors.push(cssSelector);\n\t\t});\n\t\tinvalidSelectors.forEach((selector) => {\n\t\t\tconsole.warn(\n\t\t\t\t`The CSS selector \"${selector} {...}\" in the component \"${componentName}\" is not enough specific: include at least one class.\\n`\n\t\t\t);\n\t\t});\n\t}\n\tconst classes: { [key: string]: string } = {};\n\n\tconst generatedCss =\n\t\tcss.replace(/\\.(.*?)[\\s|{]/gm, (_, className) => {\n\t\t\tconst uniqueClassName = `${componentName}__${className}`;\n\t\t\tclasses[className] = uniqueClassName;\n\t\t\treturn `.${uniqueClassName} `;\n\t\t}) + `${componentName} {display:block;}`;\n\treturn [generatedCss, classes];\n};\n\n//* OK\n//! HTML Nested fare il \"join\" delle dependencies (???)\nconst createHtml = (parts: TemplateStringsArray): [string, string[]] => {\n\tlet html = '';\n\tconst attributes = [];\n\tconst length = parts.length - 1;\n\tlet attrDelimiter = '';\n\tlet textTagName = '';\n\tfor (let i = 0; i < length; i++) {\n\t\tlet part = parts[i];\n\t\t// End of values inside an attribute\n\t\tif (attrDelimiter && part.includes(attrDelimiter)) attrDelimiter = '';\n\t\t// End of values inside a text node (script, textarea, title, style)\n\t\tif (textTagName && new RegExp(`<\\/${textTagName}>`)) textTagName = '';\n\t\tif (attrDelimiter || textTagName) {\n\t\t\t// We are inside an attribute\n\t\t\thtml += part + WC_MARKER;\n\t\t} else {\n\t\t\t// If the Regex is global, it will start from the index past the end of the last match.\n\t\t\tisAttrRegex.lastIndex = 0;\n\t\t\tconst isAttr = isAttrRegex.exec(part);\n\t\t\tif (isAttr) {\n\t\t\t\tconst [match, attrName] = isAttr;\n\t\t\t\tconst beforeLastChar = match[match.length - 1];\n\t\t\t\tattrDelimiter = beforeLastChar === '\"' || beforeLastChar === \"'\" ? beforeLastChar : '';\n\t\t\t\tpart = part.substring(0, part.length - attrDelimiter.length - 1);\n\t\t\t\tlet toAdd = `${part}${WC_MARKER}=`;\n\t\t\t\tif (attrDelimiter) toAdd += `${attrDelimiter}${WC_MARKER}`;\n\t\t\t\telse toAdd += '\"0\"';\n\t\t\t\thtml += toAdd;\n\t\t\t\tattributes.push(attrName);\n\t\t\t} else {\n\t\t\t\tif (part.match(isDynamicTagRegex)) {\n\t\t\t\t\thtml += part + DYNAMIC_TAG_MARKER;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tisInsideTextTag.lastIndex = 0;\n\t\t\t\tconst insideTextTag = isInsideTextTag.exec(part);\n\t\t\t\tif (insideTextTag) {\n\t\t\t\t\ttextTagName = insideTextTag[1];\n\t\t\t\t\thtml += part + WC_MARKER;\n\t\t\t\t} else {\n\t\t\t\t\t// It's a child node\n\t\t\t\t\thtml += part + `<?${WC_MARKER}>`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\thtml += parts[parts.length - 1];\n\thtml = html.replace(selfClosingRegex, '$1></$2>');\n\treturn [html, attributes];\n};\n\nconst createDependencies = (\n\ttemplate: HTMLTemplateElement,\n\tparts: TemplateStringsArray,\n\tattributes: string[]\n) => {\n\tconst dependencies = [];\n\ttreeWalker.currentNode = template.content;\n\tlet node: Element;\n\tlet dependencyIndex = 0;\n\tlet nodeIndex = 0;\n\tconst partsLength = parts.length;\n\twhile (((node as Node) = treeWalker.nextNode()) !== null && dependencies.length < partsLength) {\n\t\t// Is a \"normal\" node\n\t\tif (node.nodeType === 1) {\n\t\t\tif (node.nodeName === DYNAMIC_TAG_MARKER.toUpperCase()) {\n\t\t\t\tconst dependency: Dependency = {\n\t\t\t\t\ttype: TAG_NAME,\n\t\t\t\t\tindex: nodeIndex,\n\t\t\t\t};\n\t\t\t\tdependencies.push(dependency);\n\t\t\t}\n\t\t\tif (node.hasAttributes()) {\n\t\t\t\tconst attributeNames = node.getAttributeNames();\n\t\t\t\tfor (const attrName of attributeNames) {\n\t\t\t\t\tif (attrName.endsWith(WC_MARKER)) {\n\t\t\t\t\t\tconst realName = attributes[dependencyIndex++];\n\t\t\t\t\t\tconst attrValue = node.getAttribute(attrName);\n\t\t\t\t\t\tif (attrValue !== '0') {\n\t\t\t\t\t\t\tconst dynamicParts = attrValue.split(WC_MARKER);\n\t\t\t\t\t\t\tfor (let i = 0; i < dynamicParts.length - 1; i++) {\n\t\t\t\t\t\t\t\tconst dependency: Dependency = {\n\t\t\t\t\t\t\t\t\ttype: ATTR,\n\t\t\t\t\t\t\t\t\tindex: nodeIndex,\n\t\t\t\t\t\t\t\t\tattrDynamics: attrValue,\n\t\t\t\t\t\t\t\t\tname: realName,\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tdependencies.push(dependency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst dependency: Dependency = {\n\t\t\t\t\t\t\t\ttype: ATTR,\n\t\t\t\t\t\t\t\tindex: nodeIndex,\n\t\t\t\t\t\t\t\tname: realName,\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tdependencies.push(dependency);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnode.removeAttribute(attrName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// A text node should be created for each dynamic part inside of\n\t\t\t// nodes that only have text nodes inside (script, style, textarea, title).\n\t\t\tif (onlyTextChildrenElementsRegex.test(node.tagName)) {\n\t\t\t\tconst strings = node.textContent!.split(WC_MARKER);\n\t\t\t\tconst lastIndex = strings.length - 1;\n\t\t\t\tif (lastIndex > 0) {\n\t\t\t\t\tnode.textContent = '';\n\t\t\t\t\tfor (let i = 0; i < lastIndex; i++) {\n\t\t\t\t\t\tnode.append(strings[i], document.createComment(''));\n\t\t\t\t\t\t// Walk past the marker node we just added\n\t\t\t\t\t\ttreeWalker.nextNode();\n\t\t\t\t\t\tdependencies.push({ type: NODE, index: ++nodeIndex });\n\t\t\t\t\t}\n\t\t\t\t\t// It's not necessary to adjust nodeIndex here\n\t\t\t\t\tnode.append(strings[lastIndex], document.createComment(''));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (node.nodeType === 8) {\n\t\t\t// Is a comment\n\t\t\tconst data = (node as unknown as Comment).data;\n\t\t\tif (data === `?${WC_MARKER}`) dependencies.push({ type: NODE, index: nodeIndex });\n\t\t}\n\t\tnodeIndex++;\n\t}\n\treturn dependencies;\n};\n\nclass DynamicNode {\n\tpublic startNode: ChildNode;\n\tpublic endNode: ChildNode | null;\n\tpublic index: number;\n\n\tpublic isNode: true = true; // For faster access\n\tpublic isAttr: false = false; // For faster access\n\tpublic isTag: false = false; // For faster access\n\n\tconstructor(startNode: ChildNode, endNode: ChildNode | null, index: number) {\n\t\tthis.startNode = startNode;\n\t\tthis.endNode = endNode;\n\t\tthis.index = index;\n\t}\n}\n\nclass DynamicAttribute {\n\tpublic node: HTMLElement;\n\tpublic name: string;\n\tpublic index: number;\n\tpublic attrStructure: string;\n\n\tpublic isNode: false = false; // For faster access\n\tpublic isAttr: true = true; // For faster access\n\tpublic isTag: false = false; // For faster access\n\n\tprivate _callback: (event: Event) => void;\n\tprivate eventInitialized = false;\n\n\tconstructor(node: HTMLElement, dependency: Dependency) {\n\t\tthis.node = node;\n\t\tthis.name = dependency.name;\n\t\tthis.index = dependency.index;\n\t\tthis.attrStructure = dependency.attrDynamics;\n\t}\n\n\tpublic updateValue(newValue: any) {\n\t\tif ((this.node as WompElement).__womp) {\n\t\t\t(this.node as WompElement).updateProps(this.name, newValue);\n\t\t}\n\t\tconst isPrimitive = newValue !== Object(newValue);\n\t\tif (newValue === false) this.node.removeAttribute(this.name);\n\t\telse if (isPrimitive) this.node.setAttribute(this.name, newValue);\n\t}\n\n\tset callback(callback: (event: Event) => void) {\n\t\tif (!this.eventInitialized) {\n\t\t\tconst eventName = this.name.substring(1);\n\t\t\tthis.node.addEventListener(eventName, this.listener.bind(this));\n\t\t\tthis.eventInitialized = true;\n\t\t}\n\t\tthis._callback = callback;\n\t}\n\n\tprivate listener(event: Event) {\n\t\tif (this._callback) this._callback(event);\n\t}\n}\n\nclass DynamicTag {\n\tpublic node: ChildNode;\n\n\tpublic isNode: false = false; // For faster access\n\tpublic isAttr: false = false; // For faster access\n\tpublic isTag: true = true; // For faster access\n\n\tconstructor(node: ChildNode) {\n\t\tthis.node = node;\n\t}\n}\n\nclass CachedTemplate {\n\tpublic template: HTMLTemplateElement;\n\tpublic dependencies: Dependency[];\n\n\tconstructor(template: HTMLTemplateElement, dependencies: Dependency[]) {\n\t\tthis.template = template;\n\t\tthis.dependencies = dependencies;\n\t}\n\n\tpublic clone(): [DocumentFragment, Dynamics[]] {\n\t\tconst content = this.template.content;\n\t\tconst dependencies = this.dependencies;\n\t\tconst fragment = document.importNode(content, true);\n\t\ttreeWalker.currentNode = fragment;\n\t\tlet node = treeWalker.nextNode();\n\t\tlet nodeIndex = 0;\n\t\tlet dynamicIndex = 0;\n\t\tlet templateDependency = dependencies[0];\n\t\tconst dynamics = [];\n\t\twhile (templateDependency !== undefined) {\n\t\t\tif (nodeIndex === templateDependency.index) {\n\t\t\t\tlet dynamic: Dynamics;\n\t\t\t\tconst type = templateDependency.type;\n\t\t\t\tif (type === NODE) {\n\t\t\t\t\tdynamic = new DynamicNode(\n\t\t\t\t\t\tnode as HTMLElement,\n\t\t\t\t\t\tnode.nextSibling,\n\t\t\t\t\t\ttemplateDependency.index\n\t\t\t\t\t);\n\t\t\t\t} else if (type === ATTR) {\n\t\t\t\t\tdynamic = new DynamicAttribute(node as HTMLElement, templateDependency);\n\t\t\t\t} else if (type === TAG_NAME) {\n\t\t\t\t\tdynamic = new DynamicTag(node as HTMLElement);\n\t\t\t\t}\n\t\t\t\tdynamics.push(dynamic);\n\t\t\t\ttemplateDependency = dependencies[++dynamicIndex];\n\t\t\t}\n\t\t\tif (nodeIndex !== templateDependency?.index) {\n\t\t\t\tnode = treeWalker.nextNode()!;\n\t\t\t\tnodeIndex++;\n\t\t\t}\n\t\t}\n\t\ttreeWalker.currentNode = document;\n\t\treturn [fragment, dynamics];\n\t}\n}\n\nconst handleChildren = (children: WompChildren, dependency: DynamicNode) => {\n\tconsole.log('isChildren');\n\tif (children.static) {\n\t\tlet currentNode = dependency.startNode;\n\t\twhile (children.nodes.length) {\n\t\t\tcurrentNode.after(children.nodes[0]);\n\t\t\tcurrentNode = currentNode.nextSibling;\n\t\t}\n\t}\n};\n\n// This function alters the original [dynamics] array: it's not pure.\nconst setValues = (dynamics: Dynamics[], values: any[], oldValues: any[]) => {\n\tfor (let i = 0; i < dynamics.length; i++) {\n\t\tconst currentDependency = dynamics[i];\n\t\tconst currentValue = values[i];\n\t\tif (currentValue === oldValues[i] && !(currentDependency as DynamicAttribute).attrStructure)\n\t\t\tcontinue;\n\t\tif (currentDependency.isNode) {\n\t\t\t// Updated elements\n\t\t\tconst newNode = currentValue;\n\t\t\tif (newNode.__wompChildren) {\n\t\t\t\thandleChildren(newNode, currentDependency);\n\t\t\t}\n\t\t\t//! Metti dentro il loop sotto\n\n\t\t\t//! Una cosa alla volta. Prima singoli elementi, poi array\n\t\t\t/* let newNodesList: any[] = [currentValue];\n\t\t\tlet prevNode = currentDependency.startNode;\n\t\t\tlet currentNode = prevNode?.nextSibling;\n\t\t\tlet newNodeIndex = 0;\n\t\t\tlet index = 0;\n\t\t\tconst newNodesLength = newNodesList.length;\n\t\t\twhile (currentNode !== currentDependency.endNode) {\n\t\t\t\tconst newNode = newNodesList[newNodeIndex];\n\t\t\t\tconst next = currentNode.nextSibling;\n\t\t\t\tconst isNode = newNode instanceof Node;\n\t\t\t\t// Dont add the node if the value is false or if the newNode is undefined\n\t\t\t\tif (newNode === undefined || newNode === false) currentNode.remove();\n\t\t\t\telse if ((isNode && !currentNode.isEqualNode(newNode)) || !isNode) {\n\t\t\t\t\tcurrentNode.replaceWith(newNode);\n\t\t\t\t\tif (!isNode) newNodeIndex++; // So it doesn't change\n\t\t\t\t}\n\t\t\t\tprevNode = currentNode;\n\t\t\t\tcurrentNode = next;\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\t// Exceed elements must be added\n\t\t\twhile (index < newNodesLength) {\n\t\t\t\tif (!currentNode || index === 0) currentNode = prevNode;\n\t\t\t\tconst newNode = newNodesList[newNodeIndex];\n\t\t\t\tconst isNode = newNode instanceof Node;\n\t\t\t\tif (newNode !== false) {\n\t\t\t\t\tif (!isNode) newNodeIndex++;\n\t\t\t\t\tcurrentNode.after(newNode);\n\t\t\t\t}\n\t\t\t\tcurrentNode = currentNode.nextSibling;\n\t\t\t\tindex++;\n\t\t\t} */\n\t\t} else if (currentDependency.isAttr) {\n\t\t\tconst attrName = currentDependency.name;\n\t\t\tif (attrName.startsWith('@')) {\n\t\t\t\tcurrentDependency.callback = currentValue;\n\t\t\t} else {\n\t\t\t\tconst attrStructure = currentDependency.attrStructure;\n\t\t\t\tif (attrStructure) {\n\t\t\t\t\tconst parts = attrStructure.split(WC_MARKER);\n\t\t\t\t\tlet dynamicValue = currentValue;\n\t\t\t\t\tfor (let j = 0; j < parts.length - 1; j++) {\n\t\t\t\t\t\tparts[j] = `${parts[j]}${dynamicValue}`;\n\t\t\t\t\t\ti++; // Go to the next dynamic value\n\t\t\t\t\t\tdynamicValue = values[i];\n\t\t\t\t\t}\n\t\t\t\t\ti--; // Since it'll be already increased in the loop, decrease by one\n\t\t\t\t\tcurrentDependency.updateValue(parts.join('').trim());\n\t\t\t\t} else {\n\t\t\t\t\tcurrentDependency.updateValue(currentValue);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (currentDependency.isTag) {\n\t\t\tconst node = currentDependency.node;\n\t\t\tlet customElement: HTMLElement = null;\n\t\t\tconst isCustomComponent = currentValue.__womp;\n\t\t\tconst newNodeName: string = isCustomComponent ? currentValue.componentName : currentValue;\n\t\t\tif (node.nodeName !== newNodeName.toUpperCase()) {\n\t\t\t\t//! DA FINIRE TAG DINAMICI: PROBLEMA CON I CHILDREN\n\t\t\t\tconst oldAttributes = (node as HTMLElement).getAttributeNames();\n\t\t\t\tif (isCustomComponent) {\n\t\t\t\t\t// Is a Womp Element\n\t\t\t\t\tlet children = node.childNodes;\n\t\t\t\t\tif (!!(node as WompElement).__womp) {\n\t\t\t\t\t\tchildren = (node as WompElement).staticChildren.content.childNodes;\n\t\t\t\t\t}\n\t\t\t\t\tconst initialProps: WompProps = {\n\t\t\t\t\t\tchildren: {\n\t\t\t\t\t\t\tstatic: false,\n\t\t\t\t\t\t\t__wompChildren: true,\n\t\t\t\t\t\t\tnodes: children,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t\tfor (const attrName of oldAttributes) {\n\t\t\t\t\t\t// attributes on the dom will be set when creating the element\n\t\t\t\t\t\tinitialProps[attrName] = (node as HTMLElement).getAttribute(attrName);\n\t\t\t\t\t}\n\t\t\t\t\tcustomElement = new currentValue(initialProps) as WompElement;\n\t\t\t\t} else {\n\t\t\t\t\t// Is normal element\n\t\t\t\t\tcustomElement = document.createElement(newNodeName);\n\t\t\t\t\tfor (const attrName of oldAttributes) {\n\t\t\t\t\t\tcustomElement.setAttribute(attrName, (node as HTMLElement).getAttribute(attrName));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update references of the node to other dynamics elements\n\t\t\t\tlet index = i;\n\t\t\t\tlet currentDynamic = dynamics[index] as DynamicAttribute;\n\t\t\t\twhile (currentDynamic.node === node) {\n\t\t\t\t\t// Alters the original value\n\t\t\t\t\tcurrentDynamic.node = customElement;\n\t\t\t\t\tcurrentDynamic = dynamics[++index] as DynamicAttribute;\n\t\t\t\t}\n\t\t\t\tnode.replaceWith(customElement);\n\t\t\t}\n\t\t}\n\t}\n};\n\n/* \n================================================\nWomp Component\n================================================\n*/\n\n//! Se un component vuole esporre dei metodi?? ( es. modal.open() )\n//! Dovrei metterli nella chiave this. Opzioni:\n//! 1. puoi fare this.method dentro il componente: viene gi\u00E0 chiamato con this impostato\n//! 2. Crea un hook tipo \"useExposedState(nome, defaultValue)\"\nconst womp = (Component: WompComponent): WompElementClass => {\n\tconst [generatedCSS, styles] = generateSpecifcStyles(Component);\n\tconst style = document.createElement('style');\n\tstyle.textContent = generatedCSS;\n\tdocument.body.appendChild(style); //! Check where to attach styles: if shadow-dom, inside the element\n\n\tconst WompComponent = class extends HTMLElement implements WompElement {\n\t\tstatic componentName = Component.componentName;\n\t\tstatic __womp = true;\n\n\t\tstate: any[] = [];\n\t\teffects: any[] = [];\n\t\tprops: { [key: string]: any } = {};\n\t\t__womp: true = true;\n\t\tstaticChildren: HTMLTemplateElement;\n\n\t\tprivate ROOT: this | ShadowRoot;\n\t\tprivate dynamics: Dynamics[];\n\t\tprivate updating: boolean = false;\n\t\tprivate oldValues: any[];\n\n\t\tstatic cachedTemplate: CachedTemplate;\n\n\t\tstatic getOrCreateTemplate(parts: TemplateStringsArray) {\n\t\t\tif (!this.cachedTemplate) {\n\t\t\t\tconst [dom, attributes] = createHtml(parts);\n\t\t\t\tconst template = document.createElement('template');\n\t\t\t\ttemplate.innerHTML = dom;\n\t\t\t\tconst dependencies = createDependencies(template, parts, attributes);\n\t\t\t\tthis.cachedTemplate = new CachedTemplate(template, dependencies);\n\t\t\t}\n\t\t\treturn this.cachedTemplate;\n\t\t}\n\n\t\tconstructor(initialProps: WompProps) {\n\t\t\tsuper();\n\t\t\tthis.initElement(initialProps ?? {});\n\t\t}\n\n\t\t/** @override component is connected to DOM */\n\t\tconnectedCallback() {}\n\n\t\t/**\n\t\t * Initializes the component with the state, props, and styles.\n\t\t */\n\t\tprivate initElement(initialProps: WompProps) {\n\t\t\tthis.ROOT = this;\n\t\t\tthis.oldValues = [];\n\n\t\t\tthis.props = {\n\t\t\t\t...initialProps,\n\t\t\t\tstyles: styles,\n\t\t\t};\n\n\t\t\tconst componentAttributes = this.getAttributeNames();\n\t\t\tfor (const attrName of componentAttributes) {\n\t\t\t\tthis.props[attrName] = this.getAttribute(attrName);\n\t\t\t}\n\n\t\t\t//! Da finire!\n\t\t\tif (!initialProps.children) {\n\t\t\t\tconst children = initialProps.children ? initialProps.children.nodes : this.ROOT.childNodes;\n\t\t\t\t// Clone children, only in init phase\n\t\t\t\tconst childrenTemplate = document.createElement('template');\n\t\t\t\tlet currentChild = null;\n\t\t\t\twhile (children.length) {\n\t\t\t\t\tcurrentChild = children[0];\n\t\t\t\t\tchildrenTemplate.content.appendChild(currentChild);\n\t\t\t\t}\n\t\t\t\tthis.props.children = {\n\t\t\t\t\t__wompChildren: true,\n\t\t\t\t\tstatic: true,\n\t\t\t\t\tnodes: document.importNode(\n\t\t\t\t\t\tchildrenTemplate.content /* this.staticChildren.content */,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t).childNodes,\n\t\t\t\t};\n\t\t\t} /*  else {\n\t\t\t\tthis.staticChildren = initialProps.children;\n\t\t\t} */\n\n\t\t\tconst renderHtml = this.callComponent();\n\t\t\tconst { values, parts } = renderHtml;\n\t\t\tconst template = (this.constructor as typeof WompComponent).getOrCreateTemplate(parts);\n\t\t\tconst [fragment, dynamics] = template.clone();\n\t\t\tthis.dynamics = dynamics;\n\t\t\tsetValues(this.dynamics, values, this.oldValues);\n\t\t\twhile (fragment.childNodes.length) {\n\t\t\t\tthis.ROOT.appendChild(fragment.childNodes[0]);\n\t\t\t}\n\t\t}\n\n\t\tprivate callComponent() {\n\t\t\tcurrentRenderingComponent = this;\n\t\t\tcurrentHookIndex = 0;\n\t\t\tcurrentEffectIndex = 0;\n\t\t\tconst result = Component.call(this, this.props);\n\t\t\tlet renderHtml: RenderHtml = result as RenderHtml;\n\t\t\tif (typeof result === 'string' || result instanceof HTMLElement) renderHtml = html`${result}`;\n\t\t\treturn renderHtml;\n\t\t}\n\n\t\tpublic requestRender() {\n\t\t\tif (!this.updating) {\n\t\t\t\tthis.updating = true;\n\t\t\t\tPromise.resolve().then(() => {\n\t\t\t\t\tif (this.staticChildren)\n\t\t\t\t\t\t// Static children. Copy whole node\n\t\t\t\t\t\tthis.props.children = document.importNode(this.staticChildren.content, true);\n\t\t\t\t\tconst renderHtml = this.callComponent();\n\t\t\t\t\tsetValues(this.dynamics, renderHtml.values, this.oldValues);\n\t\t\t\t\tthis.oldValues = renderHtml.values;\n\t\t\t\t\tthis.updating = false;\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tpublic updateProps(prop: string, value: any) {\n\t\t\tif (this.props[prop] !== value) {\n\t\t\t\tthis.props[prop] = value;\n\t\t\t\tconsole.log(`Updating ${prop}`);\n\t\t\t\t//! Test how many times it requests an update and how many it actually updates\n\t\t\t\tthis.requestRender();\n\t\t\t}\n\t\t}\n\t};\n\n\treturn WompComponent;\n};\n\nexport function defineWomp(component: WompComponent) {\n\tif (!component.css) component.css = '';\n\tif (!component.componentName) {\n\t\tlet newName = component.name\n\t\t\t.replace(/.[A-Z]/g, (letter) => `${letter[0]}-${letter[1].toLowerCase()}`)\n\t\t\t.toLowerCase();\n\t\tif (!newName.includes('-')) newName += '-womp';\n\t\tcomponent.componentName = newName;\n\t}\n\tconst Component = womp(component);\n\tcustomElements.define(component.componentName, Component);\n\treturn Component;\n}\n\n/* \n================================================\nHOOKS\n================================================\n*/\n\nexport const useState = <State>(defaultValue: State) => {\n\tconst component = currentRenderingComponent;\n\tif (!component.state.hasOwnProperty(currentHookIndex)) {\n\t\tconst index = currentHookIndex;\n\t\tcomponent.state[index] = [\n\t\t\tdefaultValue,\n\t\t\t(newValue: State) => {\n\t\t\t\tlet computedValue = newValue;\n\t\t\t\tif (typeof newValue === 'function') {\n\t\t\t\t\tcomputedValue = newValue(component.state[index][0]);\n\t\t\t\t}\n\t\t\t\tif (computedValue !== component.state[index][0]) {\n\t\t\t\t\tcomponent.state[index][0] = computedValue;\n\t\t\t\t\tcomponent.requestRender();\n\t\t\t\t}\n\t\t\t},\n\t\t];\n\t}\n\tconst state = component.state[currentHookIndex];\n\tcurrentHookIndex++;\n\treturn state;\n};\n\nexport const useEffect = (callback: VoidFunction | (() => VoidFunction), dependencies: any[]) => {\n\tconst component = currentRenderingComponent;\n\tif (!component.effects.hasOwnProperty(currentEffectIndex)) {\n\t\tconst index = currentEffectIndex;\n\t\tconst cleanupFunction = callback();\n\t\tcomponent.effects[index] = {\n\t\t\tdependencies: dependencies,\n\t\t\tcallback: callback,\n\t\t\tcleanupFunction: cleanupFunction,\n\t\t};\n\t} else {\n\t\tconst componentEffect = component.effects[currentEffectIndex];\n\t\tfor (let i = 0; i < dependencies.length; i++) {\n\t\t\tconst oldDep = componentEffect.dependencies[i];\n\t\t\tif (oldDep !== dependencies[i]) {\n\t\t\t\tif (componentEffect.cleanupFunction) componentEffect.cleanupFunction();\n\t\t\t\tcomponentEffect.cleanupFunction = callback();\n\t\t\t\tcomponentEffect.dependencies = dependencies;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tcurrentEffectIndex++;\n};\n\n/* \n================================================\nHTML\n================================================\n*/\n\n/**\n * Elaborate the string representation of the rendering content of the component.\n *\n * This function must be called without the use of the parentheses, like in the following example:\n *\n * @example\n * ```javascript\n * render(){\n *   return html`<div>Hello World!</div>`;\n * }\n * ```\n * @param template The list of string to concatenate with the values\n * @param values The list of values to concatenate with the templates\n */\nexport function html(templateParts: TemplateStringsArray, ...values: any[]): RenderHtml {\n\tconst cleanValues = [];\n\tconst length = templateParts.length - 1; // skip last element\n\tfor (let i = 0; i < length; i++) {\n\t\t// Don't include dynamic closing tags\n\t\tif (!templateParts[i].endsWith('</')) cleanValues.push(values[i]);\n\t}\n\treturn {\n\t\tparts: templateParts,\n\t\tvalues: cleanValues,\n\t\t__womp: true,\n\t};\n}\n"],
  "mappings": "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",
  "names": ["html"]
}
