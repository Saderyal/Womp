import{registeredComponents as b}from"../womp";export const ssr=(s,t)=>{const n={count:0,cCounter:0,components:{},props:{}};let e=w(s,t,n);e=e.replace(/\s[a-z]+="\$wcREMOVE\$"/g,"");const l={},m=n.components;for(const r in m){const $=m[r].options.generatedCSS;$&&(l[r]=$.replace(/\s\s+/g," ").replace(/\t/g,"").replace(/\n/g,""))}return{html:e,css:l,props:n.props}};const w=(s,t,n)=>{let e="";const{generatedCSS:l,styles:m,shadow:r}=s.options;t.styles=m;const i=s.componentName;n.props[i]||(n.props[i]=[]),e+=`<${i} womp-hydrate="${n.props[i].length}"`;for(const o in t){const c=t[o];c!==Object(c)&&o!=="title"&&(e+=` ${o}="${c}"`)}e+=">",r&&(e+='<template shadowrootmode="open">'),l&&(e+=`<link rel="stylesheet" href="/${i}.css" />`),n.components[i]=s;const $=s(t);delete t.children;//! Maybe remove when implementing hydration
n.props[i].push(t);let p=S($,n);p=p.replace(/<([a-z]*-[a-z]*)(.*?)>/gs,(o,c,y)=>o.endsWith("/>")?`<${c}${y.substring(0,y.length-1)}></${c}>`:o);let g=0,f="";const d=[];p=p.replace(/<\/?([a-z]+?-[a-z]+?)\s?(?:\s.*?)?>/gs,(o,c)=>{if(!b[c])return o;if(o[1]!=="/"){if(c===f)g++;else if(!f){f=c;const u=o+`<?$CWC${d.length}>`;return g++,u}}else if(f&&c===f&&(g--,!g)){const u=`</?$CWC${d.length}>`+o;return f="",d.push(d.length),u}return o});for(const o of d){const c=new RegExp(`<([a-z]+-[a-z]+)([^>]*?)><\\?\\$CWC${o}>(.*?)<\\/\\?\\$CWC${o}>`,"gs");p=p.replace(c,(y,u,P,j)=>{const k=b[u],h={};h.children={_$wompChildren:!0,nodes:j};const R=P.matchAll(/\s?(.*?)="(.*?)"/gs);let a;for(;!(a=R.next()).done;){const[_,W,C]=a.value;if(C.match(/\$wc(.*?)\$/)){const z=n[C];h[W]=z}else h[W]=C}return w(k,h,n)})}return e+=p,r&&(e+="</template>"),e+=`</${i}>`,e},S=(s,t)=>{let n="";for(let e=0;e<s.parts.length;e++){let l=s.parts[e];const m=s.values[e];n+=l,n+=O(l,m,t)}return n},O=(s,t,n)=>{let e="";const l=t===!1||t===void 0||t===null,m=t!==Object(t);if(s.endsWith("=")){if(l)return e+='"$wcREMOVE$"',e;if(m)e+=`"${t}"`;else if(s.endsWith(" style=")){let r="";const i=Object.keys(t);for(const $ of i){let p=t[$],g=$.replace(/[A-Z]/g,f=>"-"+f.toLowerCase());typeof p=="number"&&(p=`${p}px`),r+=`${g}:${p};`}e+=`"${r}"`}else{const r=`$wc${n.count}$`;e+=`"${r}"`,n[r]=t,n.count++}return e}if(l)return e;if(t._$wompF)return e+=t.componentName,e;if(t._$wompChildren)return e+=t.nodes,n.cCounter++,e;if(m)return e+=t,e;if(Array.isArray(t)){for(const r of t)e+=O(s,r,n);return e}return t._$wompHtml?S(t,n):e};//! Find weak points (e.g. if you put a ">" in the attributes).
//! Dynamic composed attr doesnt work on custom elements (e.g. title="N. ${counter}")
//! Deeply test ALL Regexes: putting line breaks, and stuff.
//! Maybe review the CSS Generation. Is it OK?
