{
  "version": 3,
  "sources": ["../ts/womp.ts"],
  "sourcesContent": ["export interface WompProps {\n\tchildren?: NodeList;\n\t[key: string]: any;\n}\n\nexport interface RenderHtml {\n\tparts: TemplateStringsArray;\n\tvalues: any[];\n\t__womp: true;\n}\n\nexport interface WompComponent {\n\t(props: WompProps): (props: WompProps) => RenderHtml;\n\tcomponentName: string;\n\tcss: string;\n}\n\nexport interface WompElement extends HTMLElement {\n\tstate: any[];\n\tprops: { [key: string]: any };\n}\n\ninterface WompElementStatic {\n\tnew (): any;\n\ttemplate: HTMLTemplateElement;\n\tgetOrCreateTemplate(renderHtml: RenderHtml): HTMLTemplateElement;\n}\n\ninterface Dependency {\n\ttype: number;\n\tindex: number | number[];\n\tnode: ChildNode | Attr;\n\tname?: string;\n}\n\n/* \n================================================\nSTART WOMP\n================================================\n*/\n\nconst DEV_MODE = true;\n\nlet currentRenderingComponent: WompElement = null;\nlet currentHookIndex: number = 0;\nconst WC_MARKER = '$wc$';\nconst isAttrRegex = /\\s+([^\\s]*?)=\"?$/g;\nconst selfClosingRegex = /(<([a-x]*?-[a-z]*).*?)\\/>/g;\n\nconst NODE = 0;\nconst ATTR = 1;\n\n/**\n * Generates the static styles of a component.\n * @returns The generated styles specific to the component\n */\nconst generateSpecifcStyles = (component: WompComponent) => {\n\tconst componentCss = component.css || '';\n\tconst invalidSelectors: string[] = [];\n\tif (DEV_MODE) {\n\t\t// It's appropriate that at least one class is present in each selector\n\t\t[...componentCss.matchAll(/.*?}([\\s\\S]*?){/gm)].forEach((selector) => {\n\t\t\tconst cssSelector = selector[1].trim();\n\t\t\tif (!cssSelector.includes('.')) invalidSelectors.push(cssSelector);\n\t\t});\n\t\tinvalidSelectors.forEach((selector) => {\n\t\t\tconsole.warn(\n\t\t\t\t`The CSS selector \"${selector} {...}\" in the component \"${component.componentName}\" is not enough specific: include at least one class.\\n`\n\t\t\t);\n\t\t});\n\t}\n\tconst classNames = new Set<string>();\n\t[...componentCss.matchAll(/\\.(.*?)[\\s|{]/gm)].forEach((match) => {\n\t\tconst className = match[1];\n\t\tclassNames.add(className);\n\t});\n\tlet generatedCss = componentCss;\n\tclassNames.forEach((className) => {\n\t\tconst uniqueClassName = `${component.componentName}__${className}`;\n\t\tgeneratedCss = generatedCss.replaceAll(className, uniqueClassName);\n\t});\n\treturn generatedCss;\n};\n\nconst createHtml = (parts: TemplateStringsArray) => {\n\tconsole.time('Create HTML');\n\tlet html = '';\n\tconst length = parts.length - 1;\n\tlet attrDelimiter = '';\n\tlet consecutiveAttributes = 0;\n\tfor (let i = 0; i < length; i++) {\n\t\tlet part = parts[i];\n\t\t// If the Regex is global, it will start from the index past the end of the last match.\n\t\tisAttrRegex.lastIndex = 0;\n\t\tconst isAttr = isAttrRegex.exec(part);\n\t\t// End of values inside an attribute\n\t\tif (attrDelimiter && part.trim()[0] === attrDelimiter) {\n\t\t\tpart = part.replace(attrDelimiter, '');\n\t\t\tattrDelimiter = '';\n\t\t\thtml += `\"${consecutiveAttributes}\"`;\n\t\t\tconsecutiveAttributes = 0;\n\t\t}\n\t\tif (isAttr) {\n\t\t\tconst [match, attrName] = isAttr;\n\t\t\tconst beforeLastChar = match[match.length - 2];\n\t\t\tattrDelimiter = beforeLastChar === '\"' || beforeLastChar === \"'\" ? beforeLastChar : '';\n\t\t\tconst prevPart = part.substring(0, isAttr.index);\n\t\t\tlet toAdd = `${prevPart} ${attrName}${WC_MARKER}=`;\n\t\t\tif (attrDelimiter) toAdd += `\"${WC_MARKER}`;\n\t\t\telse toAdd += '\"0\"';\n\t\t\thtml += toAdd;\n\t\t} else if (attrDelimiter) {\n\t\t\thtml += part + `${WC_MARKER}`;\n\t\t} else {\n\t\t\thtml += part + `<?${WC_MARKER}>`;\n\t\t}\n\t}\n\thtml += parts[parts.length - 1];\n\thtml = html.replace(selfClosingRegex, '$1></$2>');\n\tconsole.timeEnd('Create HTML');\n\treturn html;\n};\n\nconst traverse = (\n\tchildNodes: NodeList,\n\tvalues: any[],\n\tindex: number,\n\tdependencies: Dependency[]\n) => {\n\tconst dependencyValue = values[index];\n\tfor (const childNode of childNodes) {\n\t\tconst child = childNode as HTMLElement;\n\t\tconst attributes = child.attributes;\n\t\tif (attributes) {\n\t\t\tconst toRemove = [];\n\t\t\tconst toSet = [];\n\t\t\tfor (const attr of attributes) {\n\t\t\t\tconst attrName = attr.name;\n\t\t\t\tif (attrName.endsWith(WC_MARKER)) {\n\t\t\t\t\tconst name = attrName.substring(0, attrName.length - WC_MARKER.length);\n\t\t\t\t\tconst attrValue = attr.value;\n\t\t\t\t\tconst dependency: Dependency = {\n\t\t\t\t\t\ttype: ATTR,\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\tnode: child,\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t};\n\t\t\t\t\tif (attrValue !== '0') {\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoRemove.push(attrName);\n\t\t\t\t\t\tif (!child.nodeName.includes('-')) {\n\t\t\t\t\t\t\tif (name[0] === '@') {\n\t\t\t\t\t\t\t\t//! Handle events\n\t\t\t\t\t\t\t} else if (dependencyValue !== false) {\n\t\t\t\t\t\t\t\ttoSet.push({ name: name, value: dependencyValue });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdependencies.push(dependency);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const name of toRemove) {\n\t\t\t\tchild.removeAttribute(name);\n\t\t\t}\n\t\t\tfor (const attr of toSet) {\n\t\t\t\tchild.setAttribute(attr.name, attr.value);\n\t\t\t}\n\t\t} else if (child.nodeName === '#comment' && (childNode as Comment).data === `?${WC_MARKER}`) {\n\t\t\t(childNode as Comment).after(dependencyValue);\n\t\t\tconst dependency: Dependency = {\n\t\t\t\ttype: NODE,\n\t\t\t\tname: '',\n\t\t\t\tnode: childNode.nextSibling,\n\t\t\t\tindex: index,\n\t\t\t};\n\t\t\tdependencies.push(dependency);\n\t\t\tindex++;\n\t\t}\n\t\ttraverse(child.childNodes, values, index, dependencies);\n\t}\n};\n\nconst womp = (Component: WompComponent): WompElementStatic => {\n\t// const styles = generateSpecifcStyles(Component);\n\tconst WompComponent = class extends HTMLElement implements WompElement {\n\t\tstate: any[] = [];\n\t\tprops: { [key: string]: any };\n\t\tROOT: this | ShadowRoot;\n\n\t\tstatic template: HTMLTemplateElement;\n\n\t\tstatic getOrCreateTemplate(renderHtml: RenderHtml) {\n\t\t\tconst { values, parts } = renderHtml;\n\t\t\tif (!this.template) {\n\t\t\t\tconst dom = createHtml(parts);\n\t\t\t\tconst template = document.createElement('template');\n\t\t\t\ttemplate.innerHTML = dom;\n\t\t\t\tconst dependencies: Dependency[] = [];\n\t\t\t\tconsole.time('Traverse');\n\t\t\t\ttraverse(template.content.childNodes, values, 0, dependencies);\n\t\t\t\tconsole.timeEnd('Traverse');\n\t\t\t\tthis.template = template;\n\t\t\t\tconsole.log(dependencies);\n\t\t\t}\n\t\t\treturn this.template;\n\t\t}\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.initElement();\n\t\t}\n\n\t\t/** @override component is connected to DOM */\n\t\tconnectedCallback() {}\n\n\t\t/**\n\t\t * Initializes the component with the state, props, and styles.\n\t\t */\n\t\tprivate initElement() {\n\t\t\tconsole.time('Init');\n\t\t\tconst constructor = this.constructor as typeof WompComponent;\n\t\t\tthis.ROOT = this;\n\t\t\tcurrentRenderingComponent = this;\n\t\t\tcurrentHookIndex = 0;\n\t\t\tconst result = Component.call(this, {});\n\t\t\tlet renderHtml: RenderHtml = result as RenderHtml;\n\t\t\tif (typeof result === 'string' || result instanceof HTMLElement) renderHtml = html`${result}`;\n\t\t\tconst template = constructor.getOrCreateTemplate(renderHtml);\n\t\t\tconst clone = template.cloneNode(true) as HTMLTemplateElement;\n\t\t\tthis.ROOT.replaceChildren(...clone.content.childNodes);\n\t\t\t// TODO: Clone and set dependencies\n\t\t\t// TODO: Events\n\t\t\tconsole.timeEnd('Init');\n\t\t}\n\t};\n\treturn WompComponent;\n};\n\nexport function defineWomp(component: WompComponent) {\n\tconst Component = womp(component);\n\tcustomElements.define(component.componentName, Component);\n\treturn Component;\n}\n\n/* \n================================================\nHOOKS\n================================================\n*/\n\nexport const useState = <State>(defaultValue: State) => {\n\tconst component = currentRenderingComponent;\n\tif (!component.state.hasOwnProperty(currentHookIndex)) {\n\t\tconst index = currentHookIndex;\n\t\tcomponent.state[index] = {\n\t\t\tvalue: defaultValue,\n\t\t\tsetter: (newValue: State) => {\n\t\t\t\tcomponent.state[index].value = newValue;\n\t\t\t},\n\t\t};\n\t}\n\tconst state = component.state[currentHookIndex];\n\tcurrentHookIndex++;\n\treturn [state.value, state.setter];\n};\n\n/* \n================================================\nHTML\n================================================\n*/\n\n/**\n * Elaborate the string representation of the rendering content of the component.\n *\n * This function must be called without the use of the parentheses, like in the following example:\n *\n * @example\n * ```javascript\n * render(){\n *   return html`<div>Hello World!</div>`;\n * }\n * ```\n * @param template The list of string to concatenate with the values\n * @param values The list of values to concatenate with the templates\n */\nexport function html(templateParts: TemplateStringsArray, ...values: any[]): RenderHtml {\n\treturn {\n\t\tparts: templateParts,\n\t\tvalues: values,\n\t\t__womp: true,\n\t};\n}\n"],
  "mappings": "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",
  "names": ["html"]
}
